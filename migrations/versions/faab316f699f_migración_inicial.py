"""Migración inicial

Revision ID: faab316f699f
Revises: 
Create Date: 2025-08-08 00:19:30.169404

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'faab316f699f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('circuitos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('load_models',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('parametro_a', sa.Float(), nullable=True),
    sa.Column('parametro_b', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('standards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('profile_picture', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('language', sa.String(length=5), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('contact_messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('subject', sa.String(length=255), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('general_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('circuit_name', sa.String(length=100), nullable=False),
    sa.Column('base_power', sa.Float(), nullable=False),
    sa.Column('base_voltage_n0', sa.Float(), nullable=False),
    sa.Column('specific_voltage_n0', sa.Float(), nullable=True),
    sa.Column('standard_id', sa.Integer(), nullable=True),
    sa.Column('model_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['model_id'], ['load_models.id'], ),
    sa.ForeignKeyConstraint(['standard_id'], ['standards.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('nodo_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('circuito_id', sa.Integer(), nullable=False),
    sa.Column('nombre_nodo', sa.String(length=100), nullable=False),
    sa.Column('carga_real', sa.Float(), nullable=False),
    sa.Column('carga_imaginaria', sa.Float(), nullable=False),
    sa.Column('valor_condensador', sa.Float(), nullable=True),
    sa.Column('tension_base_nodo', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['circuito_id'], ['circuitos.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('operations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('publicacion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('titulo', sa.String(length=100), nullable=False),
    sa.Column('fecha_creacion', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tcpbusiness',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_name', sa.String(length=255), nullable=False, comment='Nombre del proyecto TCP'),
    sa.Column('description', sa.Text(), nullable=False, comment='Descripción del proyecto'),
    sa.Column('main_activity', sa.String(length=255), nullable=False, comment='Actividad principal'),
    sa.Column('is_registered_in_conservation_zone', sa.Boolean(), nullable=False, comment='Registrado en las Zonas Priorizadas para la Conservación'),
    sa.Column('has_bank_account', sa.Boolean(), nullable=False, comment='Posee cuenta bancaria'),
    sa.Column('payment_method', sa.String(length=10), nullable=False, comment='Método de pago'),
    sa.Column('bank_type', sa.String(length=20), nullable=True, comment='Tipo de banco'),
    sa.Column('fiscal_bank_branch', sa.String(length=255), nullable=True, comment='Sucursal bancaria de su domicilio fiscal'),
    sa.Column('has_transportation', sa.Boolean(), nullable=False, comment='Posee un medio de transporte'),
    sa.Column('does_ecommerce', sa.Boolean(), nullable=False, comment='Realiza comercio electrónico'),
    sa.Column('location', sa.String(length=255), nullable=False, comment='Lugar donde ejerce'),
    sa.Column('residential_commercial_area', sa.Boolean(), nullable=False, comment='Área comercial en vivienda'),
    sa.Column('music_service', sa.Boolean(), nullable=False, comment='Servicio de música'),
    sa.Column('operation_hours', sa.String(length=255), nullable=False, comment='Horario de funcionamiento de la instalación'),
    sa.Column('nic', sa.String(length=50), nullable=False, comment='NIC'),
    sa.Column('business_address', sa.Text(), nullable=False, comment='Dirección del negocio'),
    sa.Column('contact_phone', sa.String(length=15), nullable=True, comment='Teléfono de contacto'),
    sa.Column('contact_email', sa.String(length=100), nullable=True, comment='Correo de contacto'),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='Fecha de creación'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('jti', sa.String(length=255), nullable=False),
    sa.Column('token_type', sa.String(length=50), nullable=False),
    sa.Column('scopes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.Column('is_revoked', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_tokens', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_tokens_jti'), ['jti'], unique=True)

    op.create_table('business_relation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('business_id', sa.Integer(), nullable=False),
    sa.Column('related_business_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=15), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('type', sa.String(length=10), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['business_id'], ['tcpbusiness.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['related_business_id'], ['tcpbusiness.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comentario',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('publicacion_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('contenido', sa.Text(), nullable=False),
    sa.Column('fecha', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['publicacion_id'], ['publicacion.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lineas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('circuito_id', sa.Integer(), nullable=False),
    sa.Column('nodo_envio_id', sa.Integer(), nullable=False),
    sa.Column('nodo_recepcion_id', sa.Integer(), nullable=False),
    sa.Column('nombre_nodo_envio', sa.String(length=100), nullable=False),
    sa.Column('nombre_nodo_recepcion', sa.String(length=100), nullable=False),
    sa.Column('numero_circuitos', sa.Integer(), nullable=False),
    sa.Column('tipo', sa.Enum('linea', 'transformador', name='tipo_linea'), nullable=False),
    sa.Column('resistencia', sa.Float(), nullable=True),
    sa.Column('reactancia', sa.Float(), nullable=True),
    sa.Column('susceptancia', sa.Float(), nullable=True),
    sa.Column('relacion_transformacion', sa.Float(), nullable=True),
    sa.Column('impedancia_resistencia', sa.Float(), nullable=True),
    sa.Column('impedancia_reactancia', sa.Float(), nullable=True),
    sa.Column('admitancia_magnetizacion', sa.Float(), nullable=True),
    sa.Column('potencia_nominal', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['circuito_id'], ['circuitos.id'], ),
    sa.ForeignKeyConstraint(['nodo_envio_id'], ['nodo_data.id'], ),
    sa.ForeignKeyConstraint(['nodo_recepcion_id'], ['nodo_data.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('publicacion_contenido',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('publicacion_id', sa.Integer(), nullable=False),
    sa.Column('tipo', sa.String(length=20), nullable=False),
    sa.Column('contenido', sa.Text(), nullable=True),
    sa.Column('ruta_imagen', sa.String(length=255), nullable=True),
    sa.Column('orden', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['publicacion_id'], ['publicacion.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('resultados',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('general_data_id', sa.Integer(), nullable=False),
    sa.Column('nodo_base_id', sa.Integer(), nullable=False),
    sa.Column('circuito_id', sa.Integer(), nullable=False),
    sa.Column('resultados_json', sa.Text(), nullable=False),
    sa.Column('fecha_creacion', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['circuito_id'], ['circuitos.id'], ),
    sa.ForeignKeyConstraint(['general_data_id'], ['general_data.id'], ),
    sa.ForeignKeyConstraint(['nodo_base_id'], ['nodo_data.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('servicetariff',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('business_id', sa.Integer(), nullable=False),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['business_id'], ['tcpbusiness.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('servicetariff')
    op.drop_table('resultados')
    op.drop_table('publicacion_contenido')
    op.drop_table('lineas')
    op.drop_table('comentario')
    op.drop_table('business_relation')
    with op.batch_alter_table('user_tokens', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_tokens_jti'))

    op.drop_table('user_tokens')
    op.drop_table('tcpbusiness')
    op.drop_table('publicacion')
    op.drop_table('operations')
    op.drop_table('nodo_data')
    op.drop_table('general_data')
    op.drop_table('contact_messages')
    op.drop_table('users')
    op.drop_table('standards')
    op.drop_table('load_models')
    op.drop_table('circuitos')
    # ### end Alembic commands ###
